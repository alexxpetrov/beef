events {}

http {
    # Define an upstream block for HTTP/WebSocket connections
    upstream app_websocket_http {
        server app-websocket-0:4000;  # Node 1
        server app-websocket-1:4000;  # Node 2
        # Add more nodes if needed
    }

    # Define an upstream block for gRPC connections
    upstream app_websocket_grpc {
        server app-websocket-0:4600;  # Node 1
        server app-websocket-1:4600;  # Node 2
        # Add more nodes if needed
    }

    server {
        listen 4000;
        server_name beef.upbeatbenevolance.xyz;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;

        location /api {
            proxy_set_header   X-Forwarded-For $remote_addr;
            proxy_set_header   Host $http_host;
            proxy_set_header Upgrade websocket;
            proxy_set_header Connection Upgrade;

            rewrite ^/api(.*) $1 break;  # Remove /api prefix if needed
            proxy_pass http://app_websocket_http;  # Use the upstream group
            proxy_set_header Origin http://beef.upbeatbenevolance.xyz:3000;  # Set the correct Origin

            # Handle timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
    }

    server {
        listen 4600 http2;  # HTTP/2 is required for gRPC
        server_name beef.upbeatbenevolance.xyz;

        location / {
            grpc_pass grpc://app_websocket_grpc;  # Forward gRPC requests to the upstream group
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;

            # Optional: Custom error handling for gRPC
            error_page 502 = /error502grpc;

            location = /error502grpc {
                internal;
                default_type application/grpc;
                add_header grpc-status 14;
                return 204;
            }
        }
    }
}
