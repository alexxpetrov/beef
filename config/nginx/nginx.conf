events {}

http {
    # Define an upstream block for HTTP/WebSocket connections
    upstream app_websocket_http {
        server app-websocket-0:4000;  # Node 1
        server app-websocket-1:4000;  # Node 2
    }

    # Define an upstream block for gRPC connections
    upstream app_websocket_grpc {
        server app-websocket-0:4600;  # Node 1
        server app-websocket-1:4600;  # Node 2
    }

    server {
        listen 443 ssl;  # SSL for WebSocket and gRPC traffic
        server_name beef.alexspetrov.com;

        ssl_certificate /etc/letsencrypt/live/beef.alexspetrov.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/beef.alexspetrov.com/privkey.pem;

        # WebSocket handler
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;

	    location /api {
            proxy_set_header Upgrade websocket;
            proxy_set_header Connection Upgrade;

	        rewrite ^/api(.*) $1 break;
            proxy_pass https://app_websocket_http;  # Use https instead of http
            proxy_set_header Origin https://www.alexspetrov.com;  # Update Origin header
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # gRPC handler
        location /grpc/ {
	        rewrite ^/grpc(.*) $1 break;
            grpc_pass grpc://app_websocket_grpc;  # Forward gRPC traffic to upstream
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;
        }

        # Custom error handling for gRPC
        location = /error502grpc {
            internal;
            default_type application/grpc;
            add_header grpc-status 14;
            return 204;
        }
    }
}