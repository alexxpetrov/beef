events {}

http {
    server {
        listen 4000;
        server_name localhost;

	    proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;

        location /api {
            proxy_set_header   X-Forwarded-For $remote_addr;
            proxy_set_header   Host $http_host;
            proxy_set_header Upgrade websocket;
            proxy_set_header Connection Upgrade;

            rewrite ^/api(.*) $1 break;  # Remove /api prefix if needed
            proxy_pass http://app-websocket-local:4000;  # Use service name + port
            proxy_set_header Origin http://localhost:3000;  # Set the correct Origin

             # Handle timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
    }

    server {
        listen 4600 http2;  # HTTP/2 is required for gRPC
        server_name localhost;

        location / {
            grpc_pass grpc://app-websocket-local:4600;  # Forward gRPC requests
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;

            # Optional: Custom error handling for gRPC
            error_page 502 = /error502grpc;

            location = /error502grpc {
                internal;
                default_type application/grpc;
                add_header grpc-status 14;
                return 204;
            }
        }
    }
}